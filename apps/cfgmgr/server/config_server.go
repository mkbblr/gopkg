package server

import (
	"fmt"
	"net/http"

	_ "github.com/mkbblr/gopkg/apps/cfgmgr/docs" // docs is generated by Swag CLI, you have to import it.
	httpSwagger "github.com/swaggo/http-swagger/v2"
)

type ConfigServer struct {
}

func (s *ConfigServer) Run(schema, host string, port int) {

	mux := http.NewServeMux()

	docContentUrl := fmt.Sprintf("%s://%s:%d/doc.json", schema, host, port)

	// both "/" & "/doc" should be added to make "/doc/index.html" work, need to check why
	mux.Handle("/", s.doc(docContentUrl))
	mux.Handle("/doc/*", s.doc(docContentUrl))

	// add the actual api
	mux.Handle("/ping", s.ping(nil))

	addr := fmt.Sprintf("%s:%d", host, port)
	indexPageURL := fmt.Sprintf("%s://%s:%d/doc/index.html", schema, host, port)

	fmt.Printf("\n Server address: %s\n Documentation link: %s \n\n", addr, indexPageURL)
	http.ListenAndServe(addr, mux)
}

// ping ... ping server
// @Summary	ping api
// @Description	Check if server is running
// @Success 200 "pong"
// @Router /ping [get]
func (s *ConfigServer) ping(next http.Handler) http.Handler {
	return http.HandlerFunc(func(w http.ResponseWriter, r *http.Request) {
		// fmt.Println("ping: success !!!")
		w.Write([]byte("pong"))
		if next != nil {
			next.ServeHTTP(w, r)
		}
	})
}

func (s *ConfigServer) doc(url string) http.Handler {
	return httpSwagger.Handler(
		httpSwagger.URL(url), //The url pointing to API definition
	)
}
