all: hooks clean install

## Check and Install tools required to make everything work.
## NOTE:
## There are other usefull tools inside the repository golang.org/x/tools 
## e.g. godex, gorename, gomvpkg etc. However, most of these we dont need 
## on regular basis.
GOBIN := $(shell go env GOPATH)/bin
XBIGEN := $(GOBIN)/xbigen
$(XBIGEN):
	go install github.com/mkbblr/gopkg/pkg/xbi/cmd/xbigen

SWAG := $(GOBIN)/swag
$(SWAG):
	go install github.com/swaggo/swag/cmd/swag@latest

GODOC := $(GOBIN)/godoc
$(GODOC):
	go install golang.org/x/tools/cmd/godoc@latest
	
GOIMPORTS := $(GOBIN)/goimports
$(GOIMPORTS):
	go install golang.org/x/tools/cmd/goimports@latest


go_x_tools: $(GODOC) $(GOIMPORTS) 
go_tools: go_x_tools SWAG


PRE_COMMIT_HOOK := $(shell git rev-parse --git-dir)/hooks/pre-commit
$(PRE_COMMIT_HOOK):
	cp tools/git-hooks/pre-commit $(PRE_COMMIT_HOOK)

.ONESHELL:
hooks: $(PRE_COMMIT_HOOK)
	-@diff $(PRE_COMMIT_HOOK) tools/git-hooks/pre-commit > /dev/null 2>&1
	-@test $$? -eq 0 && echo  "hooks already latest" || cp tools/git-hooks/pre-commit $(PRE_COMMIT_HOOK) 

setup: hooks go_tools


## ************************************************************************************
## 		make install 
## 			- builds and installs everything from this repository
##		make clean
##			- clean all artifact, generated code etc.
## ************************************************************************************

install: $(XBIGEN) $(SWAG)
	go generate ./...
	CGO_ENABLED=0 go install ./...

## go clean, followed by deletion of generated code and folders.
## Constraint: Note that, api/**/docs are generated by swag tool, 
## we should not have any directory with name 'docs' in actual project structure
clean:
	-go clean ./...
	-find . -type f -name main_generated.go | xargs rm
	-rm -rf apps/**/docs/


default: all
.PHONY: all	install clean setup hooks